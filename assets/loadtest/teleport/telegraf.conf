# Configuration for telegraf agent
[agent]
    ## Default data collection interval for all inputs
    interval = "10s"
    ## Rounds collection interval to 'interval'
    ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
    round_interval = true

    ## Telegraf will send metrics to outputs in batches of at
    ## most metric_batch_size metrics.
    metric_batch_size = 1000
    ## For failed writes, telegraf will cache metric_buffer_limit metrics for each
    ## output, and will flush this buffer on a successful write. Oldest metrics
    ## are dropped first when this buffer fills.
    metric_buffer_limit = 10000

    ## Collection jitter is used to jitter the collection by a random amount.
    ## Each plugin will sleep for a random time within jitter before collecting.
    ## This can be used to avoid many plugins querying things like sysfs at the
    ## same time, which can have a measurable effect on the system.
    collection_jitter = "0s"

    ## Default flushing interval for all outputs. You shouldn't set this below
    ## interval. Maximum flush_interval will be flush_interval + flush_jitter
    flush_interval = "10s"
    ## Jitter the flush interval by a random amount. This is primarily to avoid
    ## large write spikes for users running a large number of telegraf instances.
    ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
    flush_jitter = "0s"

    ## By default, precision will be set to the same timestamp order as the
    ## collection interval, with the maximum being 1s.
    ## Precision will NOT be used for service inputs, such as logparser and statsd.
    precision = ""
    ## Run telegraf in debug mode
    debug = false
    ## Run telegraf in quiet mode
    quiet = false
    ## Override default hostname, if empty use os.Hostname()
    hostname = ""
    ## If set to true, do no set the "host" tag in the telegraf agent.
    omit_hostname = false


###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

[[inputs.procstat]]
    exe = "teleport"
    prefix = "teleport"

[[inputs.prometheus]]
    # An array of urls to scrape metrics from.
    urls = ["http://127.0.0.1:3434/metrics"]
    name_prefix = "teleport_"

    # Add tags to be able to make beautiful dashboards
    [inputs.prometheus.tags]
    teleservice = "teleport"

# Read metrics about cpu usage
[[inputs.cpu]]
    ## Whether to report per-cpu stats or not
    percpu = true
    ## Whether to report total system cpu stats or not
    totalcpu = true
    ## If true, collect raw CPU time metrics.
    collect_cpu_time = false
    ## If true, compute and report the sum of all non-idle CPU states.
    report_active = false

# Read metrics about disk usage by mount point
[[inputs.disk]]
    ## By default, telegraf gather stats for all mountpoints.
    ## Setting mountpoints will restrict the stats to the specified mountpoints.
    # mount_points = ["/"]

    ## Ignore some mountpoints by filesystem type. For example (dev)tmpfs (usually
    ## present on /run, /var/run, /dev/shm or /dev).
    ignore_fs = ["tmpfs", "devtmpfs", "devfs"]

# Read metrics about disk IO by device
[[inputs.diskio]]

# Get kernel statistics from /proc/stat
[[inputs.kernel]]
    # no configuration

# Read metrics about memory usage
[[inputs.mem]]
    # no configuration

# Get the number of processes and group them by status
[[inputs.processes]]
    # no configuration

# Read metrics about swap memory usage
[[inputs.swap]]
    # no configuration

# Read metrics about system load & uptime
[[inputs.system]]
    # no configuration

# Read netstat info
[[inputs.netstat]]

# Read net info
[[inputs.net]]

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

# Configuration for influxdb server to send metrics to
[[outputs.influxdb_v2]]
    ## The full HTTP or UDP endpoint URL for your InfluxDB instance.
    ## Multiple urls can be specified as part of the same cluster,
    ## this means that only ONE of the urls will be written to each interval.
    urls = ["http://influxdb:8086"] # required

    ## Token for authentication.
    token = "${INFLUXDB_TOKEN}"

    ## Organization is the name of the organization you wish to write to; must exist.
    organization = "teleport"

    ## Destination bucket to write into.
    bucket = "telegraf"

    ## Write timeout (for the InfluxDB client), formatted as a string.
    ## If not provided, will default to 5s. 0s means no timeout (not recommended).
    timeout = "5s"